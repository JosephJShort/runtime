# Setting batch to true, triggers one build at a time.
# if there is a push while a build in progress, it will wait,
# until the running build finishes, and produce a build with all the changes
# that happened during the last build.
trigger:
  batch: true
  branches:
    include:
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

schedules:
  - cron: "0 8,20 * * *" # run at 8:00 and 20:00 (UTC) which is 00:00 and 12:00 (PST).
    displayName: Runtime default schedule
    branches:
      include:
      - main
    always: false # run only if there were changes since the last successful scheduled run.

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

jobs:

#
# Evaluate paths
#
- ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
  - template: /eng/pipelines/common/evaluate-default-paths.yml


#
# CoreCLR NativeAOT release build and libraries tests
# Only when CoreCLR or library is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/global-build-job.yml
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    buildConfig: Release
    platforms:
    - Linux_x64
    - Linux_arm64
    jobParameters:
      testGroup: innerloop
      isSingleFile: true
      nameSuffix: NativeAOT
      buildArgs: -s clr.alljits+clr.tools+clr.nativeaotlibs+clr.nativeaotruntime+libs+libs.tests -c $(_BuildConfig) /p:TestNativeAot=true /p:RunSmokeTestsOnly=true /p:ArchiveTests=true
      timeoutInMinutes: 180
      # extra steps, run tests
      extraStepsTemplate: /eng/pipelines/libraries/helix.yml
      extraStepsParameters:
        creator: dotnet-bot
        testRunNamePrefixSuffix: NativeAOT_$(_BuildConfig)
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
          eq(variables['isFullMatrix'], true))

# Build and test clr tools
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: checked
    platforms:
    - Linux_x64
    jobParameters:
      testGroup: clrTools
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
          eq(variables['isRollingBuild'], true))


