
trigger:
  batch: true
  branches:
    include:
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

pr:
  branches:
    include:
    - main
    - release/*.*
  paths:
    include:
    - '*'
    - docs/manpages/*
    exclude:
    - /**/*.md
    - eng/Version.Details.xml
    - .github/*
    - docs/*
    - LICENSE.TXT
    - PATENTS.TXT
    - THIRD-PARTY-NOTICES.TXT

variables:
  - template: /eng/pipelines/common/variables.yml

jobs:

#
# Evaluate paths
#
- ${{ if eq(variables.dependOnEvaluatePaths, true) }}:
  - template: /eng/pipelines/common/evaluate-default-paths.yml

#
# Build CoreCLR checked
# Only when CoreCLR is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: checked
    platforms:
    - windows_x64
    jobParameters:
      testGroup: innerloop
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
          eq(variables['isRollingBuild'], true))

#
# Build CoreCLR release
# Always as they are needed by Installer and we always build and test the Installer.
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/coreclr/templates/build-job.yml
    buildConfig: release
    platforms:
    - windows_x64
    jobParameters:
      testGroup: innerloop


- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
    platforms:
    - windows_x64
    jobParameters:
      testScope: innerloop

#
# Libraries release build that only runs when coreclr is changed in PRs
# We need these for checked coreclr + release libraries tests runs.
#
- ${{ if eq(variables['isRollingBuild'], false) }}:
  - template: /eng/pipelines/common/platform-matrix.yml
    parameters:
      jobTemplate: /eng/pipelines/libraries/build-job.yml
      buildConfig: Release
      platforms:
      - windows_x64
      jobParameters:
        condition: >-
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true)

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/build-job.yml
    buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
    platforms:
    - windows_x64
    jobParameters:
      framework: allConfigurations
      runTests: true
      useHelix: false
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'], true),
          eq(variables['isRollingBuild'], true))

#
# Installer Build and Test
# These are always built since they only take like 15 minutes
# we expect these to be done before we finish libraries or coreclr testing.
#

- template: /eng/pipelines/installer/installer-matrix.yml
  parameters:
    buildConfig: Release
    platforms:
      - windows_x64
    jobParameters:
      liveRuntimeBuildConfig: release
      liveLibrariesBuildConfig: ${{ variables.debugOnPrReleaseOnRolling }}

#
# CoreCLR Test executions using live libraries
# Only when CoreCLR is changed
#

- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/templates/runtimes/run-test-job.yml
    buildConfig: checked
    platforms:
    - windows_x64
    helixQueueGroup: pr
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
          eq(variables['isRollingBuild'], true))

#
# Mono CoreCLR runtime Test executions using live libraries in jit mode
# Only when Mono is changed
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/common/templates/runtimes/run-test-job.yml
    buildConfig: release
    runtimeFlavor: mono
    platforms:
    - windows_x64
    helixQueueGroup: pr
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    jobParameters:
      testGroup: innerloop
      liveLibrariesBuildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
      liveRuntimeBuildConfig: release
      runtimeVariant: minijit
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_mono.containsChange'], true),
          eq(dependencies.evaluate_paths.outputs['SetPathVars_runtimetests.containsChange'], true),
          eq(variables['isRollingBuild'], true))

#
# Libraries Debug Test Execution against a release coreclr runtime
# Only when the PR contains a libraries change
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: ${{ variables.debugOnPrReleaseOnRolling }}
    platforms:
    - windows_x64
    helixQueuesTemplate: /eng/pipelines/libraries/helix-queues-setup.yml
    jobParameters:
      isOfficialBuild: false
      testScope: innerloop
      liveRuntimeBuildConfig: release
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_libraries.containsChange'], true),
          eq(variables['isRollingBuild'], true))

#
# Release Libraries Test Execution against a checked runtime
# Only if CoreCLR or Libraries is changed
#
- template: /eng/pipelines/common/platform-matrix.yml
  parameters:
    jobTemplate: /eng/pipelines/libraries/run-test-job.yml
    buildConfig: Release
    platforms:
    - windows_x64
    helixQueuesTemplate: /eng/pipelines/coreclr/templates/helix-queues-setup.yml
    helixQueueGroup: libraries
    jobParameters:
      testScope: innerloop
      liveRuntimeBuildConfig: checked
      condition: >-
        or(
          eq(dependencies.evaluate_paths.outputs['SetPathVars_coreclr.containsChange'], true),
          eq(variables['isRollingBuild'], true))
